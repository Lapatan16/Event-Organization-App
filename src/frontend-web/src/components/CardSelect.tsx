import React, { useState } from 'react';
import './CardSelect.css';

interface CardSelectProps {
  onSelect: (selected: number[]) => void;
}

const svgData = [
  `<svg width="180px" height="127px" viewBox="0 0 34 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x=".5" y=".5" width="33" height="23" rx="3.5" fill="#fff"></rect><path fill-rule="evenodd" clip-rule="evenodd" d="M10.75 15.858H8.69L7.147 9.792c-.073-.279-.229-.525-.458-.642-.571-.292-1.201-.524-1.888-.642v-.233h3.318c.458 0 .801.35.859.758l.801 4.376 2.059-5.134h2.002l-3.089 7.583zm4.234 0H13.04l1.602-7.583h1.945l-1.602 7.583zm4.119-5.482c.057-.409.4-.642.801-.642.63-.059 1.316.058 1.888.35l.344-1.633c-.573-.234-1.203-.351-1.774-.351-1.888 0-3.262 1.05-3.262 2.508 0 1.11.973 1.692 1.66 2.042.743.35 1.03.584.972.934 0 .524-.572.758-1.143.758-.687 0-1.374-.175-2.003-.467l-.343 1.633c.687.292 1.43.409 2.117.409 2.117.058 3.432-.992 3.432-2.567 0-1.984-2.69-2.1-2.69-2.974zm9.497 5.482l-1.545-7.583h-1.659c-.343 0-.687.233-.801.583l-2.86 7h2.002l.4-1.108h2.46l.23 1.108H28.6zm-2.917-5.54l.571 2.857h-1.602l1.03-2.858z" fill="#172B85"></path></svg>`,
  `<svg width="180px" height="127px" viewBox="0 0 34  24" xmlns="http://www.w3.org/2000/svg"><rect x="0.5" y="0.5" width="33" height="23" rx="3" fill="#FFFFFF"></rect><polygon fill="#F26122" points="14.3 7.3 19.7 7.3 19.7 16.7 14.3 16.7"></polygon><path d="M14.66,11.98 C14.66,10.16 15.51,8.42 17,7.3 C14.34,5.28 10.49,5.71 8.4,8.3 C6.32,10.88 6.77,14.63 9.43,16.66 C11.64,18.35 14.77,18.35 17,16.66 C15.51,15.54 14.66,13.8 14.66,11.98 Z" fill="#EA1D25"></path><path d="M26.89,11.98 C26.89,15.27 24.15,17.94 20.77,17.94 C19.4,17.94 18.06,17.48 16.98,16.66 C19.64,14.63 20.11,10.88 18,8.3 C17.7,7.92 17.36,7.59 16.98,7.3 C19.64,5.28 23.49,5.71 25.57,8.3 C26.45,9.35 26.89,10.66 26.89,11.98 Z" fill="#F69E1E"></path></svg>`,
  `<svg width="180px" height="127px" viewBox="0 0 34 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x=".5" y=".5" width="33" height="23" rx="3.5" fill="#1F72CD"></rect><path fill-rule="evenodd" clip-rule="evenodd" d="M6.095 8.5l-3.18 7.247h3.808l.472-1.156h1.079l.472 1.156h4.192v-.882l.373.882h2.168l.374-.9v.9h8.718l1.06-1.126.992 1.126 4.478.01-3.191-3.613L31.101 8.5h-4.408L25.66 9.605 24.7 8.5h-9.484l-.814 1.87-.834-1.87h-3.8v.852L9.345 8.5h-3.25zm.737 1.029H8.69l2.11 4.914V9.53h2.033l1.63 3.523 1.502-3.523h2.023v5.2h-1.23l-.011-4.075-1.795 4.075H13.85l-1.805-4.075v4.075H9.512l-.48-1.166H6.438l-.48 1.165H4.601L6.832 9.53zm17.288 0h-5.006v5.197h4.928l1.589-1.722 1.531 1.722h1.6l-2.326-2.583 2.327-2.614H27.23l-1.58 1.703-1.531-1.703zm-16.385.88l-.854 2.077h1.708l-.854-2.077zm12.615 1.146v-.95h3.124l1.363 1.518-1.424 1.526H20.35v-1.036h2.731v-1.058H20.35z" fill="#fff"></path></svg>`,
  `<svg width="180px" height="127px" viewBox="0 0 34 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x=".5" y=".5" width="33" height="23" rx="3.5" fill="#fff"></rect><path d="M14 23l19-5.75V20c0 1.657-1.343 3-3 3H14z" fill="#FD6020"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M29.394 9.11c1.045 0 1.62.484 1.62 1.398.052.698-.418 1.29-1.045 1.397l1.41 1.988h-1.097l-1.202-1.935h-.104v1.934h-.889V9.111h1.307zm-.418 2.204h.26c.576 0 .837-.269.837-.752 0-.43-.261-.699-.836-.699h-.261v1.45zm-3.973 2.579h2.51v-.806h-1.621v-1.29h1.568v-.806h-1.568V9.917h1.62V9.11h-2.509v4.781zm-2.613-1.559l-1.202-3.223h-.94L22.18 14h.47l1.934-4.89h-.94l-1.255 3.225zm-10.61-.805c0 1.343 1.046 2.471 2.352 2.471.418 0 .784-.107 1.15-.269v-1.074c-.261.322-.627.537-1.045.537-.836 0-1.516-.645-1.516-1.504v-.108c-.052-.86.627-1.612 1.464-1.665.418 0 .836.215 1.097.537V9.379c-.313-.214-.732-.268-1.097-.268-1.36-.108-2.405 1.02-2.405 2.418zm-1.62-.591c-.522-.215-.68-.323-.68-.591.053-.323.314-.591.628-.538.261 0 .523.161.732.376l.47-.644c-.366-.323-.836-.538-1.306-.538-.732-.053-1.36.538-1.412 1.29v.054c0 .644.262 1.02 1.098 1.289.209.054.418.161.627.269.157.107.261.268.261.483 0 .376-.313.699-.627.699H9.9c-.418 0-.784-.269-.94-.645l-.576.59c.314.592.941.914 1.568.914.836.054 1.516-.59 1.568-1.45v-.162c-.052-.644-.313-.967-1.359-1.396zM7.13 13.892h.888V9.111H7.13v4.781zM3 9.111h1.567c1.255.054 2.248 1.128 2.196 2.418 0 .698-.314 1.343-.836 1.826-.47.376-1.045.591-1.62.538H3V9.11zm1.15 3.976c.418.053.888-.108 1.202-.377.313-.322.47-.752.47-1.235 0-.43-.157-.86-.47-1.182-.314-.269-.784-.43-1.202-.376h-.262v3.17h.262z" fill="#000"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M17.948 9c-1.307 0-2.405 1.075-2.405 2.471 0 1.344 1.046 2.472 2.405 2.526 1.359.053 2.404-1.075 2.456-2.472C20.352 10.128 19.307 9 17.948 9z" fill="#FD6020"></path></svg>`
];

const CardSelect: React.FC<CardSelectProps> = ({ onSelect }) => {
  const [selectedIndices, setSelectedIndices] = useState<number[]>([]);

  const toggleSelection = (index: number) => {
    let newSelection;
    if (selectedIndices.includes(index)) {
      newSelection = selectedIndices.filter(i => i !== index);
    } else {
      newSelection = [...selectedIndices, index];
    }
    setSelectedIndices(newSelection);
    onSelect(newSelection);
  };

  return (
    <div className="card-select">
      {svgData.map((svg, index) => (
        <div
          key={index}
          className={`card-item ${selectedIndices.includes(index) ? 'selected' : ''}`}
          onClick={() => toggleSelection(index)}
          dangerouslySetInnerHTML={{ __html: svg }}
        />
      ))}
    </div>
  );
};

export default CardSelect;



// {/* <div>
//                                     <svg width="200px" height="141px" viewBox="0 0 34 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x=".5" y=".5" width="33" height="23" rx="3.5" fill="#fff" /* strokeWidth='0.6' stroke="#D9D9D9" */></rect><path fill-rule="evenodd" clip-rule="evenodd" d="M10.75 15.858H8.69L7.147 9.792c-.073-.279-.229-.525-.458-.642-.571-.292-1.201-.524-1.888-.642v-.233h3.318c.458 0 .801.35.859.758l.801 4.376 2.059-5.134h2.002l-3.089 7.583zm4.234 0H13.04l1.602-7.583h1.945l-1.602 7.583zm4.119-5.482c.057-.409.4-.642.801-.642.63-.059 1.316.058 1.888.35l.344-1.633c-.573-.234-1.203-.351-1.774-.351-1.888 0-3.262 1.05-3.262 2.508 0 1.11.973 1.692 1.66 2.042.743.35 1.03.584.972.934 0 .524-.572.758-1.143.758-.687 0-1.374-.175-2.003-.467l-.343 1.633c.687.292 1.43.409 2.117.409 2.117.058 3.432-.992 3.432-2.567 0-1.984-2.69-2.1-2.69-2.974zm9.497 5.482l-1.545-7.583h-1.659c-.343 0-.687.233-.801.583l-2.86 7h2.002l.4-1.108h2.46l.23 1.108H28.6zm-2.917-5.54l.571 2.857h-1.602l1.03-2.858z" fill="#172B85"></path></svg>
//                                 </div>
                                
//                                 <div>
//                                     <svg width="200px" height="141px" viewBox="0 0 34 24" version="1.1" xmlns="http://www.w3.org/2000/svg" /*xmlns:xlink="http://www.w3.org/1999/xlink*/ >
//                                         <g id="mastercard" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
//                                             <g id="Manage---Guest-Payments" transform="translate(-970.000000, -379.000000)">
//                                                 <g id="Group-13" transform="translate(970.000000, 379.000000)">
//                                                     <rect id="Rectangle-5" /* stroke="#D9D9D9" */ fill="#FFFFFF" x="0.5" y="0.5" width="33" height="23" rx="3"></rect>
//                                                     <polygon id="Rectangle-path" fill="#F26122" fill-rule="nonzero" points="14.3191489 7.30344828 19.6808511 7.30344828 19.6808511 16.6551724 14.3191489 16.6551724"></polygon>
//                                                     <path d="M14.6595745,11.9793103 C14.6595745,10.1586207 15.5106383,8.42068966 17,7.30344828 C14.3404255,5.27586207 10.4893617,5.71034483 8.40425532,8.29655172 C6.31914894,10.8827586 6.76595745,14.6275862 9.42553191,16.6551724 C11.6382979,18.3517241 14.7659574,18.3517241 17,16.6551724 C15.5106383,15.537931 14.6595745,13.8 14.6595745,11.9793103 Z" id="_Path_" fill="#EA1D25" fill-rule="nonzero"></path>
//                                                     <path d="M26.893617,11.9793103 C26.893617,15.2689655 24.1489362,17.937931 20.7659574,17.937931 C19.4042553,17.937931 18.0638298,17.4827586 16.9787234,16.6551724 C19.6382979,14.6275862 20.106383,10.8827586 18,8.29655172 C17.7021277,7.92413793 17.3617021,7.59310345 16.9787234,7.30344828 C19.6382979,5.27586207 23.4893617,5.71034483 25.5744681,8.29655172 C26.4468085,9.35172414 26.893617,10.6551724 26.893617,11.9793103 Z" id="Shape" fill="#F69E1E" fill-rule="nonzero"></path>
//                                                 </g>
//                                             </g>
//                                         </g>
//                                     </svg>
//                                 </div>

//                                 <div>
//                                     <svg width="200px" height="141px" viewBox="0 0 34 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x=".5" y=".5" width="33" height="23" rx="3.5" fill="#1F72CD" /* stroke="#D9D9D9" */></rect><path fill-rule="evenodd" clip-rule="evenodd" d="M6.095 8.5l-3.18 7.247h3.808l.472-1.156h1.079l.472 1.156h4.192v-.882l.373.882h2.168l.374-.9v.9h8.718l1.06-1.126.992 1.126 4.478.01-3.191-3.613L31.101 8.5h-4.408L25.66 9.605 24.7 8.5h-9.484l-.814 1.87-.834-1.87h-3.8v.852L9.345 8.5h-3.25zm.737 1.029H8.69l2.11 4.914V9.53h2.033l1.63 3.523 1.502-3.523h2.023v5.2h-1.23l-.011-4.075-1.795 4.075H13.85l-1.805-4.075v4.075H9.512l-.48-1.166H6.438l-.48 1.165H4.601L6.832 9.53zm17.288 0h-5.006v5.197h4.928l1.589-1.722 1.531 1.722h1.6l-2.326-2.583 2.327-2.614H27.23l-1.58 1.703-1.531-1.703zm-16.385.88l-.854 2.077h1.708l-.854-2.077zm12.615 1.146v-.95h3.124l1.363 1.518-1.424 1.526H20.35v-1.036h2.731v-1.058H20.35z" fill="#fff"></path></svg>
//                                 </div>

//                                 <div>
//                                     <svg width="200px" height="141px" viewBox="0 0 34 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x=".5" y=".5" width="33" height="23" rx="3.5" fill="#fff" /* stroke="#D9D9D9" */></rect><path d="M14 23l19-5.75V20c0 1.657-1.343 3-3 3H14z" fill="#FD6020"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M29.394 9.11c1.045 0 1.62.484 1.62 1.398.052.698-.418 1.29-1.045 1.397l1.41 1.988h-1.097l-1.202-1.935h-.104v1.934h-.889V9.111h1.307zm-.418 2.204h.26c.576 0 .837-.269.837-.752 0-.43-.261-.699-.836-.699h-.261v1.45zm-3.973 2.579h2.51v-.806h-1.621v-1.29h1.568v-.806h-1.568V9.917h1.62V9.11h-2.509v4.781zm-2.613-1.559l-1.202-3.223h-.94L22.18 14h.47l1.934-4.89h-.94l-1.255 3.225zm-10.61-.805c0 1.343 1.046 2.471 2.352 2.471.418 0 .784-.107 1.15-.269v-1.074c-.261.322-.627.537-1.045.537-.836 0-1.516-.645-1.516-1.504v-.108c-.052-.86.627-1.612 1.464-1.665.418 0 .836.215 1.097.537V9.379c-.313-.214-.732-.268-1.097-.268-1.36-.108-2.405 1.02-2.405 2.418zm-1.62-.591c-.522-.215-.68-.323-.68-.591.053-.323.314-.591.628-.538.261 0 .523.161.732.376l.47-.644c-.366-.323-.836-.538-1.306-.538-.732-.053-1.36.538-1.412 1.29v.054c0 .644.262 1.02 1.098 1.289.209.054.418.161.627.269.157.107.261.268.261.483 0 .376-.313.699-.627.699H9.9c-.418 0-.784-.269-.94-.645l-.576.59c.314.592.941.914 1.568.914.836.054 1.516-.59 1.568-1.45v-.162c-.052-.644-.313-.967-1.359-1.396zM7.13 13.892h.888V9.111H7.13v4.781zM3 9.111h1.567c1.255.054 2.248 1.128 2.196 2.418 0 .698-.314 1.343-.836 1.826-.47.376-1.045.591-1.62.538H3V9.11zm1.15 3.976c.418.053.888-.108 1.202-.377.313-.322.47-.752.47-1.235 0-.43-.157-.86-.47-1.182-.314-.269-.784-.43-1.202-.376h-.262v3.17h.262z" fill="#000"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M17.948 9c-1.307 0-2.405 1.075-2.405 2.471 0 1.344 1.046 2.472 2.405 2.526 1.359.053 2.404-1.075 2.456-2.472C20.352 10.128 19.307 9 17.948 9z" fill="#FD6020"></path></svg>
//                                 </div>
//                             </div>
//                         </div> */}